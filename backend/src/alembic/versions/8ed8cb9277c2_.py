"""empty message

Revision ID: 8ed8cb9277c2
Revises: 
Create Date: 2023-10-27 00:01:30.156654

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ed8cb9277c2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('channel',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('channel_name', sa.String(length=32), nullable=False),
    sa.Column('text_or_voice', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('server',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('language', sa.String(length=3), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('hash_pass', sa.String(length=128), nullable=False),
    sa.Column('salt', sa.String(length=32), nullable=False),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('user_from', sa.Integer(), nullable=True),
    sa.Column('channel', sa.Integer(), nullable=True),
    sa.Column('server', sa.Integer(), nullable=True),
    sa.Column('is_delete', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['channel'], ['channel.id'], ),
    sa.ForeignKeyConstraint(['server'], ['server.id'], ),
    sa.ForeignKeyConstraint(['user_from'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('server', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('can_mute', sa.Boolean(), nullable=False),
    sa.Column('can_kick', sa.Boolean(), nullable=False),
    sa.Column('can_ban', sa.Boolean(), nullable=False),
    sa.Column('can_edit', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['server'], ['server.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_to_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_user', sa.Integer(), nullable=False),
    sa.Column('second_user', sa.Integer(), nullable=False),
    sa.Column('is_friend', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['first_user'], ['user.id'], ),
    sa.ForeignKeyConstraint(['second_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('server_channel_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('server', sa.Integer(), nullable=True),
    sa.Column('channel', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['channel'], ['channel.id'], ),
    sa.ForeignKeyConstraint(['role'], ['role.id'], ),
    sa.ForeignKeyConstraint(['server'], ['server.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_server_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('server', sa.Integer(), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['role.id'], ),
    sa.ForeignKeyConstraint(['server'], ['server.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_server_role')
    op.drop_table('server_channel_role')
    op.drop_table('user_to_user')
    op.drop_table('role')
    op.drop_table('message')
    op.drop_table('user')
    op.drop_table('server')
    op.drop_table('channel')
    # ### end Alembic commands ###
